type Component
  {
    id: String
    measuredCompound: String
    measuredCompoundValue: Float
    measuredCompoundUnit: String
    measuredCompoundDenominatorValue: Float
    measuredCompoundDenominatorUnit: String
    measuredCompoundDataPointsNumber: Integer
    measuredCompoundRecordDate: String
    measuredCompoundComment: String
    measuredCompoundDerivationType: String
    laboratorySampleAggregationMinimumMeasuredCompoundValue: Float
    laboratorySampleAggregationMaximumMeasuredCompoundValue: Float
    laboratorySampleAggregationMedianMeasuredCompoundValue: Float
    laboratorySampleAggregationMeasuredCompoundStandardDeviation: Float
    analyticalAnalysisMeasurementProtocolDoi: String
    analyticalAnalysisMeasurementMethod: AnalyticalMeasurementMethod
  }

type Container
  {
    foods: [Food]
    components: [Component]
  }

type Food
  {
    id: String
    primaryFoodType: String
    primaryFoodTypeLabel: String
    primaryFoodTypeUpcCode: Integer
    foodPreparationState: FoodPreparationState
    foodAcquisitionCity: String
    foodAcquisitionCountry: String
    foodAcquisitionCountrySubdivision: String
    foodAcquisitionDate: String
    foodDistributorCity: String
    foodDistributorCountry: String
    foodDistributorCountrySubdivision: String
    foodExpirationDate: String
  }

interface NamedThing
  {
    id: String
  }

